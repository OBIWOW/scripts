import csv
from pprint import pprint
import json
from datetime import datetime
from pathlib import Path


if  __name__ == '__main__':
    
    year = 2023
    course_name = f"Oslo Bioinformatics Workshop Week {year}"
    website_link = "https://www.mn.uio.no/sbi/english/events/oslo-bioinformatics-workshop-week-2023"
    
    # path to folder with folders for each workshop
    workshop_email_folder = "/Users/alexajo/alexajo@uio.no - Google Drive/Min disk/Student_Committee_SBI/OBiWoW2023/registrations/workshop_email/" 


    mail_template_greeting = "<p>Dear "
    mail_template_welcome = f"</p><p>Thank you for registering for the {course_name}!<br>"
    mail_template_confirmation = "We are confirming your registration to the following workshop:"
    mail_template_wating_list = "Due to the limited number of seats, you are on the waiting list for the following workshop:"

    mail_template_end = f'</p><p>Please take notes on any requirements of the workshop you subscribed to in the <a href="{website_link}">Wokshop website</a>.\
        <br>Further information and updates to relevant workshops will be communicated by mail.</p>\
        <p>Thank you again for your registration. If you have any questions or wish to modify your registration, please contact us at <a href="mailto: oslo-bioinfo-workshops@ifi.uio.no">oslo-bioinfo-workshops@ifi.uio.no</a>.</p>\
        <p>Regards,\
        <br>Student Committee of the Centre for Bioinformatics at UiO.</p>'
    
    # file with dump from nettskjema for registration
    path_registration = "registration_results.tsv"
    outpath = "mail.tsv"
    
    # file generated by tsv_to_html.py
    infile_dict = "schedule.json"

    # folder on vortex with calendar files
    ics_folder = f"{website_link}/ics_files"
    
    # Percentage allowed overbooking
    # 1.25 in 2022
    # 1.7 in 2023
    perc_attendance = 1.7
    
    with open(infile_dict, 'r') as file:
        dict_schedule = json.load(file)
        
    dict_schedule_final = {}
    dict_count_attendance = {}
    
    for key in dict_schedule:
        new_key = dict_schedule[key]['title']\
            .replace("'", "")\
            .replace(":", "") \
            .replace("/", "")
        dict_schedule_final[new_key] = dict_schedule[key]
        dict_schedule_final[new_key]['key'] = key
        dict_count_attendance[new_key] = 0
    # pprint(dict_schedule_final)
    
    id_column = "NR"
    title_column = "workshop"
    name_column = "var2"
    email_column = "var3"
    affilation_column = "Your affiliation (e.g. Department of Informatics, UiO)"
    
    dict_person_info = {}
    key_workshop = "workshop"
    key_mail = "mail"
    key_title = "title"
    key_name = "name"
    key_attendance = "max_attendance"

    # to generate text files with email addresses of those registered
    workshop_email_dict = {}
    
    with open(path_registration, newline='') as csvfile:
        data = csv.DictReader(csvfile, delimiter = '\t')
        for row in data:
            current_title_no_spaces = row[title_column]
            
            current_title = current_title_no_spaces.replace("_", " ")
            
            # custom replacements
            current_title = current_title.replace('Reproducible research with Nextflow ', 'Reproducible research with Nextflow & building pipelines with nf-core')
            current_title = current_title.replace('Executable metadata crosswalks through Omnipy', 'Using Omnipy for data wrangling and metadata mapping')
            
            # print(current_title)
            # print(dict_schedule_final[current_title])

            # dict that holds workshop titles as keys
            # and list of emails of participants as values
            if current_title_no_spaces not in workshop_email_dict:
                workshop_email_dict[current_title_no_spaces] = []
            
            lower_name = row[name_column].lower()
            mail = row[email_column]
            
            html_body = mail_template_greeting 
            html_body += row[name_column] 
            html_body += mail_template_welcome 
            html_body += mail_template_confirmation 
            html_body += '<ul><li>workshop 1 <a href="https://www.mn.uio.no/sbi/english/events/oslo-bioinformatics-week-2022/ics_files/02.ics">Add to calendar</a></li></ul>' 
            html_body += mail_template_end
                    
            if mail not in dict_person_info:
                dict_person_info[mail] = {}
                dict_person_info[mail][key_workshop] = {}
                dict_person_info[mail][key_workshop]['accepted'] = []
                dict_person_info[mail][key_workshop]['waiting'] = []
                dict_person_info[mail][key_name] = row[name_column]
                
            dict_count_attendance[current_title] += 1       
            overlimit = dict_count_attendance[current_title] >= int(dict_schedule_final[current_title][key_attendance] *perc_attendance)
            
            if overlimit:  
                dict_person_info[mail][key_workshop]['waiting'].append(current_title)
            else:
                dict_person_info[mail][key_workshop]['accepted'].append(current_title)
                workshop_email_dict[current_title_no_spaces].append(mail)
            
            
    # pprint(dict_person_info)
            
    dict_result = {}

    with open(outpath, 'w') as file:

        for mail in dict_person_info:
            
            html_body = mail_template_greeting 
            html_body += dict_person_info[mail][key_name]
            html_body += mail_template_welcome 
            if dict_person_info[mail][key_workshop]['accepted']:
                html_body += mail_template_confirmation 
                html_body += '<ul>'
                for workshop in dict_person_info[mail][key_workshop]['accepted']:
                    html_body += '<li><strong>' 
                    html_body += '<a href="' + website_link + "#" + dict_schedule_final[workshop]['key'] + '" >' + workshop + '</a> </strong>'
                    html_body += ' at ' + dict_schedule_final[workshop]['timeslot'] + " on " + datetime.strptime(dict_schedule_final[workshop]['date'], '%d.%m.%y').strftime("%A %d %B") +' (<a href="' + ics_folder + "/" + dict_schedule_final[workshop]['key'] + '.ics">Add to calendar</a>)'
                    html_body += '</li>'
                html_body += '</ul>'
            if dict_person_info[mail][key_workshop]['waiting']:
                html_body += mail_template_wating_list 
                html_body += '<ul>'
                for workshop in dict_person_info[mail][key_workshop]['waiting']:
                    html_body += '<li><strong>' 
                    html_body += '<a href="' + website_link + dict_schedule_final[workshop]['key'] + '" >' + workshop + '</a> </strong>'
                    html_body += ' at ' + dict_schedule_final[workshop]['timeslot'] + " on " + datetime.strptime(dict_schedule_final[workshop]['date'], '%d.%m.%y').strftime("%A %d %B")
                    html_body += '</li>'
                html_body += '</ul>'
            html_body += mail_template_end
            
            
            file.write("\t".join([mail, dict_person_info[mail][key_name], html_body]) + "\n")
            
    for workshop in workshop_email_dict:
        out_folder = workshop_email_folder + "/" + workshop
        out_file = out_folder + "/registered.txt"
        filepath = Path(out_file)
        filepath.parent.mkdir(parents=True, exist_ok=True)
        with filepath.open("w") as fh:
            fh.write("\n".join(workshop_email_dict[workshop]))
        #with open(out_file, "w") as fh:
#        print(out_file + "\n" + "\n".join(workshop_email_dict[workshop]))
        #with open(workshop_email_folder)

    # print(len(dict_person_info))
    
    
    # html_res = mail_template_greeting + "Person One" + mail_template_welcome + '<ul><li>workshop 1 (<a href="https://www.mn.uio.no/sbi/english/events/oslo-bioinformatics-week-2022/ics_files/02.ics">Add to calendar</a>)</li></ul>' + mail_template_end


