import csv
from pprint import pprint
import json
import subprocess
from pathlib import Path
import sys

"""
Script to generate evaluation report for OBiWoW
Input:
- evaluation_results.csv: file with dump from Google Form for evaluation
- schedule.json: Schedule file generated by tsv_to_html.py

* Generates a quarto markdown file with the header content for the 
  evaluation report, setting wotkshop title and path to evaluation_results.csv.
  This file has as include the qmd file that generates the report.
* Uses quarto to convert the quarto markdown file to pdf.
* Moves the pdf to the correct folder, same as where the list of registered
  participants is.
* Also generates a report for all workshops combined.
"""

def do_cmd(cmd, dryrun = False):
    """
    Run a shell command
    """
    if dryrun:
        print(f"Would be running: {cmd}")
        return
    else:
        print(f"Running: {cmd}")
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    if result.stdout:
        print(result.stdout)
    else:
        print(result.stderr)

def run_quarto(qmd_content):
    """
    Run quarto to convert qmd to pdf
    """

    with open("OBiWoW_workshop_evaluation_report.qmd", 'w') as outfile:
        outfile.write(qmd_content)

    cmd = "quarto render OBiWoW_workshop_evaluation_report.qmd"
    do_cmd(cmd)

def move_file(old_location, new_location):
    """
    Move file from old_location to new_location
    Code generated by Github Copilot
    """
    old_location_path = Path(old_location)
    new_location_path = Path(new_location)
    
    if old_location_path.is_file():
        print(f"Moving: {old_location} to {new_location}")
        old_location_path.rename(new_location_path)
    else:
        print(f"No file found at {old_location}")

if  __name__ == '__main__':
    
    year = 2024
    course_name = f"Oslo Bioinformatics Workshop Week {year}"
    
    # file with dump from Google Form for evaluation
    path_evaluation = "evaluation_results.csv"
    
    # folder for results individual workshops
    workshop_email_folder = "/Users/alexajo/Google Drive/Min disk/Student_Committee_SBI/OBiWoW2024/registrations/folders_for_each_workshop/" 

    # folder for results all workshops
    evaluation_all_folder = "/Users/alexajo/Google Drive/Min disk/Student_Committee_SBI/OBiWoW2024/evaluation/" 

    # Schedule file generated by tsv_to_html.py
    infile_dict = "schedule.json"
    with open(infile_dict, 'r') as file:
        dict_schedule = json.load(file)

    ###################################
    # Create report for all workshops #
    ###################################
    print(f"Workshop: All workshops")

    qmd_content = f"""
<!-- DO NOT EDIT THIS FILE
This file is automatically generated by the script evaluation.py
-->
---
title: Evaluation report for {course_name}
subtitle: All workshops
execute:
  echo: false
format: pdf
---

```{{python}}
workshop_title = 'All workshops'
path_evaluation = '{path_evaluation}'
```
"""
    qmd_content += "{{< include OBiWoW_workshop_evaluation_report_content.qmd >}}\n"
    
    # convert to PDF using quarto
    run_quarto(qmd_content)

    # move output pdf to evaluation folder
    out_folder = evaluation_all_folder
    out_file = out_folder + "/ObiWoW_workshop_evaluation_report_all_workshops.pdf"
    move_file("OBiWoW_workshop_evaluation_report.pdf", out_file)        

    ###################################
    # Create report for each workshop #
    ###################################
    
    for key in dict_schedule:
        workshop_title = dict_schedule[key]['title']
        if workshop_title.startswith("Networking event"):
            continue
        # title without spaces and special characters
        workshop_short_title = workshop_title.replace(" ", "_").replace(":", "").replace("/", "")
        workshop_short_title = workshop_short_title.replace("&", "").replace("__", "_").replace("'","")
        print(f"Workshop: {workshop_title}")
        
        qmd_content = f"""
<!-- DO NOT EDIT THIS FILE
This file is automatically generated by the script evaluation.py
-->
---
title: {course_name}
subtitle: \"Evaluation report for '{workshop_title}'\"
execute:
  echo: false
format: pdf
---

```{{python}}
workshop_title = "{workshop_title}"
path_evaluation = '{path_evaluation}'
```
"""     
        qmd_content += "{{< include OBiWoW_workshop_evaluation_report_content.qmd >}}\n"

        # convert to PDF using quarto
        run_quarto(qmd_content)

        # check if output pdf exists
        if not Path("OBiWoW_workshop_evaluation_report.pdf").is_file():
            print("Something went wrong, no pdf generated")
            sys.exit(1)
        # move output pdf to workshop folder
        out_folder = workshop_email_folder + "/" + workshop_short_title
        out_file = out_folder + "/Evaluation_report.pdf"
        move_file("OBiWoW_workshop_evaluation_report.pdf", out_file)
        
        # add `break` here for debugging
        break
    print("Done!")
